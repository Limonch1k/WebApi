FROM mcr.microsoft.com/dotnet/sdk:7.0 as build

WORKDIR /source

# copy csproj and restore as distinct layers
COPY PresentationLayer/*.csproj PresentationLayer/
COPY BusinessLayer/*.csproj BusinessLayer/
COPY DatabaseLayer/*.csproj DatabaseLayer/
COPY GeneralObject/*.csproj GeneralObject/
#COPY cert.conf /cert/
RUN dotnet restore "PresentationLayer/api_fact_weather_by_city.csproj"

# copy everything else and build app
COPY PresentationLayer/ PresentationLayer/
COPY BusinessLayer/ BusinessLayer/
COPY DatabaseLayer/ DatabaseLayer/
COPY GeneralObject/ GeneralObject/

#create ssl cert
#RUN apt update -y
#RUN apt install openssl -y
#RUN ls -la
#RUN openssl req -new -nodes -x509 -days 10000 -keyout /cert/api.key -out /cert/api.crt -config /cert/cert.conf
#RUN openssl x509 -in /cert/api.crt -noout -text



WORKDIR /source/PresentationLayer
RUN dotnet publish -c release -o /app  /restore





# final stage/image
FROM mcr.microsoft.com/dotnet/aspnet:7.0

WORKDIR /app

COPY --from=build /app .
#COPY --from=build /cert /cert

#ENV ASPNETCORE_HTTPS_PORT=${PROJECT_PORT_INSIDE}
#ENV ASPNETCORE_Kestrel__Certificates__Default__Path=/cert/api.crt
#ENV ASPNETCORE_Kestrel__Certificates__Default__KeyPath=/cert/api.key

ENV ASPNETCORE_URLS="${API_URL}"
ENV TZ=Etc/GMT+3
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

ENTRYPOINT ["dotnet", "api_fact_weather_by_city.dll"]
